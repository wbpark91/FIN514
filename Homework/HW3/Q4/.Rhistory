setwd(/Users/wanbaep2/Desktop/FIN514/Homework/HW3)
setwd(Users/wanbaep2/Desktop/FIN514/Homework/HW3)
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3")
error1 = read.csv(out1.csv)
pwd
getwd)_
getwd()
error1 = read.csv("out1.csv")
View(error1)
View(error1)
plot(error1)
plot(error1$CRR)
plot(error1$CRR, 'l')
plot(error1$CRR, type = 'l')
plot(error1$CRR, type = 'l', main = "Error of CRR method")
plot(error$STEPS, error1$CRR, type = 'l', main = "Error of CRR method")
plot(error1$STEPS, error1$CRR, type = 'l', main = "Error of CRR method")
plot(error1$STEPS, error1$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS")
plot(error1$STEPS, error1$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
plot(error1$STEPS, error1$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
plot(error1$STEPS, error1$RB, type = 'l', main = "Error of RB method",
xlab = "STEPS", ylab = "ERROR")
plot(error1$STEPS, error1$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
plot(error1$STEPS, error1$RB, type = 'l', main = "Error of RB method",
xlab = "STEPS", ylab = "ERROR")
error2 = read.csv("out2.csv") #LR ERROR
plot(error2$STEPS, error2$LR, type = 'l', main = "Error of LR mehod",
xlab = "STEPS", ylab = "ERROR")
par(mfrow = c(1, 3))
plot(error1$STEPS, error1$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
plot(error1$STEPS, error1$RB, type = 'l', main = "Error of RB method",
xlab = "STEPS", ylab = "ERROR")
plot(error2$STEPS, error2$LR, type = 'l', main = "Error of LR mehod",
xlab = "STEPS", ylab = "ERROR")
par(mfrow = c(3, 1))
plot(error1$STEPS, error1$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
plot(error1$STEPS, error1$RB, type = 'l', main = "Error of RB method",
xlab = "STEPS", ylab = "ERROR")
plot(error2$STEPS, error2$LR, type = 'l', main = "Error of LR mehod",
xlab = "STEPS", ylab = "ERROR")
error3 = read.csv("out3.csv") #CRR, RB Extrapolation
error4 = read.csv("out4.csv") #LR Extrapolation
plot(error3$N, error3$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
par(mfrow = c(3, 1))
plot(error3$N, error3$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error3$N, error3$RB, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error4$N, error4$LR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error3$N, error3$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error3$N, error3$RB, type = 'l', main = "Error of Extrapolation: RB",
xlab = "N", ylab = "ERROR")
plot(error4$N, error4$LR, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR")
error3 = read.csv("out3.csv") #CRR, RB Extrapolation
error3 = read.csv("out3.csv") #CRR, RB Extrapolation
error4 = read.csv("out4.csv") #LR Extrapolation
par(mfrow = c(3, 1))
plot(error3$N, error3$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error3$N, error3$RB, type = 'l', main = "Error of Extrapolation: RB",
xlab = "N", ylab = "ERROR")
plot(error4$N, error4$LR, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR")
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q1")
error1 = read.csv("out1.csv") #CRR, RB ERROR
error2 = read.csv("out2.csv") #LR ERROR
error3 = read.csv("out3.csv") #CRR, RB Extrapolation
error4 = read.csv("out4.csv") #LR Extrapolation
par(mfrow = c(3, 1))
plot(error1$STEPS, error1$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
plot(error1$STEPS, error1$RB, type = 'l', main = "Error of RB method",
xlab = "STEPS", ylab = "ERROR")
plot(error2$STEPS, error2$LR, type = 'l', main = "Error of LR mehod",
xlab = "STEPS", ylab = "ERROR")
par(mfrow = c(3, 1))
plot(error3$N, error3$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error3$N, error3$RB, type = 'l', main = "Error of Extrapolation: RB",
xlab = "N", ylab = "ERROR")
plot(error4$N, error4$LR, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR")
error1 = read.csv("out1.csv") #CRR, RB ERROR
error2 = read.csv("out2.csv") #LR ERROR
error3 = read.csv("out3.csv") #CRR, RB Extrapolation
error4 = read.csv("out4.csv") #LR Extrapolation
par(mfrow = c(3, 1))
plot(error1$STEPS, error1$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
plot(error1$STEPS, error1$RB, type = 'l', main = "Error of RB method",
xlab = "STEPS", ylab = "ERROR")
plot(error2$STEPS, error2$LR, type = 'l', main = "Error of LR mehod",
xlab = "STEPS", ylab = "ERROR")
par(mfrow = c(3, 1))
plot(error3$N, error3$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error3$N, error3$RB, type = 'l', main = "Error of Extrapolation: RB",
xlab = "N", ylab = "ERROR")
plot(error4$N, error4$LR, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR")
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q2")
par(mfrow = c(3, 1))
plot(error5$STEPS, error5$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
plot(error5$STEPS, error5$BD, type = 'l', main = "Error of BD method",
xlab = "STEPS", ylab = "ERROR")
plot(error6$STEPS, error6$CRR, type = 'l', main = "Error of LR method",
xlab = "STEPS", ylab = "ERROR")
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q2")
error5 = read.csv("out1.csv") #CRR, BD ERROR
error6 = read.csv("out2.csv") #LR ERROR
par(mfrow = c(3, 1))
plot(error5$STEPS, error5$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
plot(error5$STEPS, error5$BD, type = 'l', main = "Error of BD method",
xlab = "STEPS", ylab = "ERROR")
plot(error6$STEPS, error6$CRR, type = 'l', main = "Error of LR method",
xlab = "STEPS", ylab = "ERROR")
error5 = read.csv("out1.csv") #CRR, BD ERROR
error6 = read.csv("out2.csv") #LR ERROR
View(error5)
View(error6)
par(mfrow = c(3, 1))
plot(error5$STEPS, error5$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
View(error5)
plot(error5$STEPS, error5$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
View(error5)
par(mfrow = c(3, 1))
plot(error5$STEP, error5$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
plot(error5$STEP, error5$BD, type = 'l', main = "Error of BD method",
xlab = "STEPS", ylab = "ERROR")
plot(error6$STEP, error6$LR, type = 'l', main = "Error of LR method",
xlab = "STEPS", ylab = "ERROR")
bound = read.csv("out3.csv") #Exercise bound of option
plot(error6$STEP, error6$LR, type = 'l', main = "Error of LR method",
xlab = "STEPS", ylab = "ERROR")
par
par()
par
par()
plot(bound$STEP, bound$Boundary, type = 'l', main = "Exercise boundary",
xlab = "STEPS", ylab = "Boundary")
par(0)
plot(bound$STEP, bound$Boundary, type = 'l', main = "Exercise boundary",
xlab = "STEPS", ylab = "Boundary")
par(mfrow = c(1, 1))
plot(bound$STEP, bound$Boundary, type = 'l', main = "Exercise boundary",
xlab = "STEPS", ylab = "Boundary")
par(mfrow = c(3, 1))
plot(error7$N, error7$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
error7 = read.csv("out4.csv") #Error of Extrapolation: CRR, BD
error8 = read.csv("out5.csv") #Error of Extrapolation: LR
plot(error7$N, error7$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error7$N, error7$BD, type = 'l', main = "Error of Extrapolation: BD",
xlab = "N", ylab = "ERROR")
plot(error48N, error8$LR, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR")
plot(error8$N, error8$LR, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR")
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q2")
error5 = read.csv("out1.csv") #CRR, BD ERROR
error6 = read.csv("out2.csv") #LR ERROR
bound = read.csv("out3.csv") #Exercise bound of option
error7 = read.csv("out4.csv") #Error of Extrapolation: CRR, BD
error8 = read.csv("out5.csv") #Error of Extrapolation: LR
par(mfrow = c(3, 1))
plot(error5$STEP, error5$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
plot(error5$STEP, error5$BD, type = 'l', main = "Error of BD method",
xlab = "STEPS", ylab = "ERROR")
plot(error6$STEP, error6$LR, type = 'l', main = "Error of LR method",
xlab = "STEPS", ylab = "ERROR")
par(mfrow = c(1, 1))
plot(bound$STEP, bound$Boundary, type = 'l', main = "Exercise boundary",
xlab = "STEPS", ylab = "Boundary")
par(mfrow = c(3, 1))
plot(error7$N, error7$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error7$N, error7$BD, type = 'l', main = "Error of Extrapolation: BD",
xlab = "N", ylab = "ERROR")
plot(error8$N, error8$LR, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR")
error5 = read.csv("out1.csv") #CRR, BD ERROR
error6 = read.csv("out2.csv") #LR ERROR
bound = read.csv("out3.csv") #Exercise bound of option
error7 = read.csv("out4.csv") #Error of Extrapolation: CRR, BD
error8 = read.csv("out5.csv") #Error of Extrapolation: LR
par(mfrow = c(3, 1))
plot(error5$STEP, error5$CRR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
plot(error5$STEP, error5$BD, type = 'l', main = "Error of BD method",
xlab = "STEPS", ylab = "ERROR")
plot(error6$STEP, error6$LR, type = 'l', main = "Error of LR method",
xlab = "STEPS", ylab = "ERROR")
par(mfrow = c(1, 1))
plot(bound$STEP, bound$Boundary, type = 'l', main = "Exercise boundary",
xlab = "STEPS", ylab = "Boundary")
par(mfrow = c(3, 1))
plot(error7$N, error7$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error7$N, error7$BD, type = 'l', main = "Error of Extrapolation: BD",
xlab = "N", ylab = "ERROR")
plot(error8$N, error8$LR, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR")
plot(error8$N, error8$LR1, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR")
plot(error7$N, error7$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error7$N, error7$BD, type = 'l', main = "Error of Extrapolation: BD",
xlab = "N", ylab = "ERROR")
par(mfrow = c(3, 1))
plot(error7$N, error7$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
par(mfrow = c(3, 1))
plot(error7$N, error7$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error7$N, error7$BD, type = 'l', main = "Error of Extrapolation: BD",
xlab = "N", ylab = "ERROR")
plot(error8$N, error8$LR1, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR", col = 'red')
lines(error8$N, error8$LR2, col="green")
par(mfrow = c(3, 1))
plot(error7$N, error7$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error7$N, error7$BD, type = 'l', main = "Error of Extrapolation: BD",
xlab = "N", ylab = "ERROR")
plot(error8$N, error8$LR2, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR", col = 'red')
lines(error8$N, error8$LR1, col="green")
par(mfrow = c(3, 1))
plot(error7$N, error7$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error7$N, error7$BD, type = 'l', main = "Error of Extrapolation: BD",
xlab = "N", ylab = "ERROR")
plot(error8$N, error8$LR2, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR", ylim = c(0, 0.003), col = 'red')
lines(error8$N, error8$LR1, col="green")
par(mfrow = c(3, 1))
plot(error7$N, error7$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error7$N, error7$BD, type = 'l', main = "Error of Extrapolation: BD",
xlab = "N", ylab = "ERROR")
plot(error8$N, error8$LR2, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR", ylim = c(-0.001, 0.003), col = 'red')
lines(error8$N, error8$LR1, col="green")
par(mfrow = c(3, 1))
plot(error7$N, error7$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error7$N, error7$BD, type = 'l', main = "Error of Extrapolation: BD",
xlab = "N", ylab = "ERROR")
plot(error8$N, error8$LR2, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR", ylim = c(-0.001, 0.003), col = 'red')
lines(error8$N, error8$LR1, col="green")
lines(error8$N, 0, col = 'black')
abline(h = 0)
par(mfrow = c(3, 1))
plot(error7$N, error7$CRR, type = 'l', main = "Error of Extrapolation: CRR",
xlab = "N", ylab = "ERROR")
plot(error7$N, error7$BD, type = 'l', main = "Error of Extrapolation: BD",
xlab = "N", ylab = "ERROR")
plot(error8$N, error8$LR2, type = 'l', main = "Error of Extrapolation: LR",
xlab = "N", ylab = "ERROR", ylim = c(-0.001, 0.003), col = 'red')
lines(error8$N, error8$LR1, col="green")
abline(h = 0)
error9 = read.csv("out.csv") #Error of CRR: continuous barrier option
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q3")
error9 = read.csv("out.csv") #Error of CRR: continuous barrier option
plot(error9$STEPS, error9$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
par(mfrow = c(1, 1))
plot(error9$STEPS, error9$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
with(d, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=1.2))
par(new = T)
with(d, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=1.2))
par(mfrow = c(1, 1))
plot(error9$STEPS, error9$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
par(new = T)
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=1.2))
plot(error9$STEPS, error9$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
par(new = T)
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=1))
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3))
par(mfrow = c(1, 1))
plot(error9$STEPS, error9$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
par(new = T)
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3))
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'r')
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q3")
error9 = read.csv("out.csv") #Error of CRR: continuous barrier option
par(mfrow = c(1, 1))
plot(error9$STEPS, error9$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
par(new = T)
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'r')
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q3")
error9 = read.csv("out.csv") #Error of CRR: continuous barrier option
par(mfrow = c(1, 1))
plot(error9$STEPS, error9$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR")
par(new = T)
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
axis(side = 4)
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q3")
error9 = read.csv("out.csv") #Error of CRR: continuous barrier option
par(mfrow = c(1, 1))
plot(error9$STEPS, error9$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR", col = 'red')
par(new = T)
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
axis(side = 4)
mtext(side = 4, line = 3, 'Lambda')
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q3")
error9 = read.csv("out.csv") #Error of CRR: continuous barrier option
par(mfrow = c(1, 1))
plot(error9$STEPS, error9$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR", col = 'red')
par(new = T)
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
axis(side = 4)
mtext(side = 4, line = 0.5, 'Lambda')
legend("topleft",
legend=c(expression(-log[10](italic(p))), "N genes"),
lty=c(1,0), pch=c(NA, 16), col=c("red3", "black"))
legend("topleft",
legend=c("Error", expression(lambda)),
lty=c(1,0), pch=c(NA, 16), col=c("red3", "black"))
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q3")
error9 = read.csv("out.csv") #Error of CRR: continuous barrier option
par(mfrow = c(1, 1))
plot(error9$STEPS, error9$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR", col = 'red')
par(new = T)
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
axis(side = 4)
mtext(side = 4, line = 0.5, 'Lambda')
legend("topleft",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(NA, 16), col=c("red3", "black"))
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q3")
error9 = read.csv("out.csv") #Error of CRR: continuous barrier option
par(mfrow = c(1, 1))
plot(error9$STEPS, error9$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR", col = 'red')
par(new = T)
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
axis(side = 4)
mtext(side = 4, line = 0.5, 'Lambda')
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(NA, 16), col=c("red3", "black"))
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q3")
error9 = read.csv("out.csv") #Error of CRR: continuous barrier option
par(mfrow = c(1, 1))
plot(error9$STEPS, error9$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR", col = 'red')
par(new = T)
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
axis(side = 4)
mtext(side = 4, line = 0.5, expression(Lambda))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(NA, 16), col=c("red3", "black"))
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q3")
error9 = read.csv("out.csv") #Error of CRR: continuous barrier option
par(mfrow = c(1, 1))
plot(error9$STEPS, error9$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR", col = 'red')
par(new = T)
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
axis(side = 4)
mtext(side = 4, line = 0.5, expression(Lambda))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(NA, 16), col=c("red", "black"))
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q4")
error10 = read.csv("out.csv") #Error of CRR: discrete barrier option
par(mfrow = c(1, 1))
plot(error10$STEPS, error10$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR", col = 'red')
par(new = T)
with(error10, plot(error10$STEPS, error10$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
axis(side = 4)
mtext(side = 4, line = 0.5, expression(Lambda))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(NA, 16), col=c("red", "black"))
abline(h = 0.5)
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q4")
error10 = read.csv("out.csv") #Error of CRR: discrete barrier option
par(mfrow = c(1, 1))
plot(error10$STEPS, error10$ERROR, type = 'p', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR", col = 'red')
par(new = T)
with(error10, plot(error10$STEPS, error10$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
axis(side = 4)
mtext(side = 4, line = 0.5, expression(Lambda))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(NA, 16), col=c("red", "black"))
abline(h = 0.5)
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(0,0), pch=c(NA, 16), col=c("red", "black"))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(NA, 16), col=c("red", "black"))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(16, 16), col=c("red", "black"))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(15, 16), col=c("red", "black"))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(14, 16), col=c("red", "black"))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(13, 16), col=c("red", "black"))
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q4")
error10 = read.csv("out.csv") #Error of CRR: discrete barrier option
par(mfrow = c(1, 1))
plot(error10$STEPS, error10$ERROR, type = 'p', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR", col = 'red')
par(new = T)
with(error10, plot(error10$STEPS, error10$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
axis(side = 4)
mtext(side = 4, line = 0.5, expression(Lambda))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(13, 16), col=c("red", "black"))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(17, 16), col=c("red", "black"))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(18, 16), col=c("red", "black"))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(1, 16), col=c("red", "black"))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(2, 16), col=c("red", "black"))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(0,0), pch=c(1, 16), col=c("red", "black"))
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q4")
error10 = read.csv("out.csv") #Error of CRR: discrete barrier option
par(mfrow = c(1, 1))
plot(error10$STEPS, error10$ERROR, type = 'p', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR", col = 'red')
par(new = T)
with(error10, plot(error10$STEPS, error10$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
axis(side = 4)
mtext(side = 4, line = 0.5, expression(Lambda))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(0,0), pch=c(1, 16), col=c("red", "black"))
abline(h = 0.5)
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q3")
error9 = read.csv("out.csv") #Error of CRR: continuous barrier option
par(mfrow = c(1, 1))
plot(error9$STEPS, error9$ERROR, type = 'p', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR", col = 'red')
par(new = T)
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
axis(side = 4)
mtext(side = 4, line = 0.5, expression(Lambda))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(NA, 16), col=c("red", "black"))
l
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q3")
error9 = read.csv("out.csv") #Error of CRR: continuous barrier option
par(mfrow = c(1, 1))
plot(error9$STEPS, error9$ERROR, type = 'l', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR", col = 'red')
par(new = T)
with(error9, plot(error9$STEPS, error9$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
axis(side = 4)
mtext(side = 4, line = 0.5, expression(Lambda))
legend("topright",
legend=c("Error", expression(Lambda)),
lty=c(1,0), pch=c(NA, 16), col=c("red", "black"))
setwd("/Users/wanbaep2/Desktop/FIN514/Homework/HW3/Q4")
error10 = read.csv("out.csv") #Error of CRR: discrete barrier option
par(mfrow = c(1, 1))
plot(error10$STEPS, error10$ERROR, type = 'p', main = "Error of CRR method",
xlab = "STEPS", ylab = "ERROR", col = 'red')
par(new = T)
with(error10, plot(error10$STEPS, error10$LAMBDA, pch=16, axes=F, xlab=NA, ylab=NA, cex=0.3), col = 'red')
axis(side = 4)
mtext(side = 4, line = 0.5, expression(Lambda))
